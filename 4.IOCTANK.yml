AWSTemplateFormatVersion: "2010-09-09"
Description: "This is the data center automation configuration of the OCTANK virtual company. 2AZs, 10.102.0.0/8"

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "VPC Parameters"
        Parameters:
          - AvailabilityZoneA
          - AvailabilityZoneB

# AZ Parameters

Parameters:
  AvailabilityZoneA:
    Description: "Choose AZ1 for your VPC."
    Type: AWS::EC2::AvailabilityZone::Name
    Default: "ap-northeast-2"
  AvailabilityZoneB:
    Description: "Choose AZ2 for your VPC."
    Type: AWS::EC2::AvailabilityZone::Name
    Default: "ap-northeast-2"
  KeyPair:
    Description: "Keypair to access the CSR"
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "APR-2020-whchoi-home"
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

# whchoi ec2 images

#Mappings:
#  RegionMap:
#    'ap-northeast-2':
#      AMI: "ami-0e956abc893b8fdc2"
#    'ap-northeast-1':
#      AMI: "ami-0f21259d1600d67c7"
#    'us-east-1':
#      AMI: "ami-09bf161a067c3055c"
#    'eu-central-1':
#      AMI: "ami-00e257fbc328baa25"
#    'eu-west-1':
#      AMI: "ami-07eaa7bc8ad97f43c"

# whchoi02 account img
#Mappings:
#  RegionMap:
#    'ap-northeast-2':
#      AMI: "ami-07eb3b622d65b3282"
#    'ap-northeast-1':
#      AMI: "ami-0d0b31f9a31b06baf"
#    'us-east-1':
#      AMI: "ami-0175605caef730e00"
#    'eu-central-1':
#      AMI: "ami-049bfdd9d1aab5776"
#    'eu-west-1':
#      AMI: "ami-07eaa7bc8ad97f43c"

# IOCTANK Resources

Resources:

# Create VPCIOCTANK

  VPCIOCTANK:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.102.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: IOCTANK
        - Key: project
          Value: OCTANK

# Create VPCIOCTANK-PublicSubnet A

  PublicSubnetAIOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIOCTANK
      CidrBlock: "10.102.0.0/22"
      AvailabilityZone: !Ref AvailabilityZoneA
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: IOCTANK-Pub-A Subnet

# Create VPCIOCTANK-PublicSubnet B

  PublicSubnetBIOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIOCTANK
      CidrBlock: "10.102.4.0/22"
      AvailabilityZone: !Ref AvailabilityZoneB
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: IOCTANK-Pub-B Subnet

# Create VPCIOCTANK-Public Route Table

  PublicSubnetRouteTableIOCTANK:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCIOCTANK
      Tags:
        - Key: Name
          Value: IOCTANK-Public RT

# Public A Subnet Accsociate VPCIOCTANK-Public Route Table

  PublicASubnetRouteTableAssociationIOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTableIOCTANK
      SubnetId: !Ref PublicSubnetAIOCTANK

# Public B Subnet Accsociate VPCIOCTANK-Public Route Table

  PublicBSubnetRouteTableAssociationIOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTableIOCTANK
      SubnetId: !Ref PublicSubnetBIOCTANK

# Create VPCIOCTANK-PrivateSubnet A

  PrivateSubnetAIOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIOCTANK
      CidrBlock: "10.102.8.0/21"
      AvailabilityZone: !Ref AvailabilityZoneA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: IOCTANK-Priv-A Subnet

# Create VPCIOCTANK-PrivateSubnet B

  PrivateSubnetBIOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIOCTANK
      CidrBlock: "10.102.16.0/21"
      AvailabilityZone: !Ref AvailabilityZoneB
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: IOCTANK-Priv-B Subnet

# Create VPCIOCTANK-Private Route Table

  PrivateSubnetRouteTableIOCTANK:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCIOCTANK
      Tags:
        - Key: Name
          Value: IOCTANK-Private RT

# Private A Subnet Accsociate VPC-IOCTANK-Private Route Table

  PrivateASubnetRouteTableAssociationIOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTableIOCTANK
      SubnetId: !Ref PrivateSubnetAIOCTANK

# Private B Subnet Accsociate VPCIOCTANK-Private Route Table

  PrivateBSubnetRouteTableAssociationIOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTableIOCTANK
      SubnetId: !Ref PrivateSubnetBIOCTANK

# VPC IOCTANK ServerRole

  ServerRoleIOCTANK:
    Type: AWS::IAM::Role
    Properties:
      RoleName: IOCTANK-SSMRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  InstanceProfileIOCTANK:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - !Ref ServerRoleIOCTANK

# VPCIOCTANK Security Group - ICMP , SSH Permit 

  IOCTANKEc2SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open-up ports for ICMP and SSH from 10.x.x.x
      GroupName: IOCTANK-SG
      VpcId: !Ref VPCIOCTANK
      SecurityGroupIngress:
        - IpProtocol: icmp
          CidrIp: 0.0.0.0/0
          FromPort: "-1"
          ToPort: "-1"
        - IpProtocol: tcp
          CidrIp: 10.4.0.0/16
          FromPort: "22"
          ToPort: "22"
      Tags:
        - Key: Name
          Value: IOCTANK-SG
          
  # Create IOCTANK IGW

  IOCTANKInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: IOCTANK-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCIOCTANK
      InternetGatewayId: !Ref IOCTANKInternetGateway

  IOCTANKDirectInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: IOCTANKInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IOCTANKInternetGateway
      RouteTableId: !Ref PublicSubnetRouteTableIOCTANK

# Creat IOCTANK NAT GateWay

  IOCTANKNATEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  IOCTANKNATGateway:
    DependsOn: AttachGateway
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt:
          - IOCTANKNATEIP
          - AllocationId
      SubnetId: !Ref PublicSubnetAIOCTANK
      Tags:
        - Key: Name
          Value: IOCTANK-NATGW

  IOCTANKNATInternetRouteAttach:
    Type: AWS::EC2::Route
    DependsOn: IOCTANKInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref IOCTANKNATGateway
      RouteTableId: !Ref AttachSubnetRouteTableIOCTANK

  IOCTANKNATInternetRoutePrivate:
    Type: AWS::EC2::Route
    DependsOn: IOCTANKInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref IOCTANKNATGateway
      RouteTableId: !Ref PrivateSubnetRouteTableIOCTANK

# VPCIOCTANK EC2 Create

  ServerAEc2IOCTANK:
    Type: AWS::EC2::Instance
    DependsOn: PrivateSubnetAIOCTANK
    Properties:
      SubnetId: !Ref PrivateSubnetAIOCTANK
#     ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      ImageId: !Ref LatestAmiId
      PrivateIpAddress: 10.102.14.100
      InstanceType: t3.small
      SecurityGroupIds: 
        - Ref: IOCTANKEc2SecGroup
      IamInstanceProfile: !Ref InstanceProfileIOCTANK
      Tags:
        - Key: Name
          Value: IOCTANK-Server-A
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/sh
            sudo yum -y update
            sudo yum -y install yum-utils 
            sudo yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            sudo yum -y install iotop iperf3 iptraf tcpdump git bash-completion 
            sudo yum -y install httpd php mysql php-mysql 
            sudo yum -y install python-pip
            sudo yum -y install nethogs iftop lnav nmon tmux wireshark
            sudo systemctl start httpd
            sudo systemctl enable httpd
            cd /var/www/html/
            sudo git clone https://github.com/whchoi98/ec2meta-webpage.git
            sudo systemctl restart httpd
            cd /home/ec2-user/
            sudo git clone https://github.com/whchoi98/TGW_CF.git
            cd /home/ec2-user/TGW_CF/
            sudo -s
            cat hostfile >> /etc/hosts
            exit
              
  ServerBEc2IOCTANK:
    Type: AWS::EC2::Instance
    DependsOn: PrivateSubnetBIOCTANK
    Properties:
      SubnetId: !Ref PrivateSubnetBIOCTANK
#     ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      ImageId: !Ref LatestAmiId
      PrivateIpAddress: 10.102.22.100
      InstanceType: t3.small
      SecurityGroupIds: 
        - Ref: IOCTANKEc2SecGroup
      IamInstanceProfile: !Ref InstanceProfileIOCTANK
      Tags:
        - Key: Name
          Value: IOCTANK-Server-B
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/sh
            sudo yum -y update
            sudo yum -y install yum-utils 
            sudo yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            sudo yum -y install iotop iperf3 iptraf tcpdump git bash-completion 
            sudo yum -y install httpd php mysql php-mysql 
            sudo yum -y install python-pip
            sudo yum -y install nethogs iftop lnav nmon tmux wireshark
            sudo systemctl start httpd
            sudo systemctl enable httpd
            cd /var/www/html/
            sudo git clone https://github.com/whchoi98/ec2meta-webpage.git
            sudo systemctl restart httpd
            cd /home/ec2-user/
            sudo git clone https://github.com/whchoi98/TGW_CF.git
            cd /home/ec2-user/TGW_CF/
            sudo -s
            cat hostfile >> /etc/hosts
            exit            
  
  AttachSubnetAIOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIOCTANK
      CidrBlock: "10.102.24.0/24"
      AvailabilityZone: !Ref AvailabilityZoneA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: IOCTANK-Attach-A Subnet

  AttachSubnetBIOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCIOCTANK
      CidrBlock: "10.102.25.0/24"
      AvailabilityZone: !Ref AvailabilityZoneB
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: IOCTANK-Attach-B Subnet

  AttachSubnetRouteTableIOCTANK:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCIOCTANK
      Tags:
        - Key: Name
          Value: IOCTANK-Attach RT

  AttachASubnetRouteTableAssociationIOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AttachSubnetRouteTableIOCTANK
      SubnetId: !Ref AttachSubnetAIOCTANK

  AttachBSubnetRouteTableAssociationIOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AttachSubnetRouteTableIOCTANK
      SubnetId: !Ref AttachSubnetBIOCTANK

  EndpointSecGroupIOCTANK:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open-up ports for local VPC
      GroupName: IOCTANK-EP-SG
      VpcId: !Ref VPCIOCTANK
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "1"
          ToPort: "65535"
          CidrIp: 10.102.0.0/16
        - IpProtocol: udp
          FromPort: "1"
          ToPort: "65535"
          CidrIp: 10.102.0.0/16
      Tags:
        - Key: Name
          Value: IOCTANK-EP-SG

  SSMEndpointIOCTANK:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPCIOCTANK
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssm"
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      SubnetIds:
        - Ref: AttachSubnetAIOCTANK
        - Ref: AttachSubnetBIOCTANK
      SecurityGroupIds: 
        - Ref: EndpointSecGroupIOCTANK

  SSMMEndpointIOCTANK:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPCIOCTANK
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssmmessages"
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      SubnetIds:
        - Ref: AttachSubnetAIOCTANK
        - Ref: AttachSubnetBIOCTANK
      SecurityGroupIds: 
        - Ref: EndpointSecGroupIOCTANK

  # Create OCTANK Transit Gateway
  TransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      AmazonSideAsn: 65000
      Description: "TGW Route Integration Test"
      AutoAcceptSharedAttachments: "enable"
      DefaultRouteTableAssociation: "disable"
      DnsSupport: "enable"
      VpnEcmpSupport: "enable"
      Tags:
        - Key: Name
          Value: IOCTANK-TGW

Outputs:
  # IOCTANK Outputs
  VPCIOCTANK:
    Description: "The Created VPC"
    Value: !Ref VPCIOCTANK
    Export:
      Name: IOCTANK-VPC

  AttachSubnetAIOCTANK:
    Description: "IOCTANK Attach Subnet A"
    Value: !Ref AttachSubnetAIOCTANK
    Export:
      Name: IOCTANK-AttachSubnetA
  AttachSubnetBIOCTANK:
    Description: "IOCTANK Attach Subnet B"
    Value: !Ref AttachSubnetBIOCTANK
    Export:
      Name: IOCTANK-AttachSubnetB


  PublicSubnetAIOCTANK:
    Description: "IOCTANK Public Subnet A"
    Value: !Ref PublicSubnetAIOCTANK
    Export:
      Name: IOCTANK-PublicSubnetA
  PublicSubnetBIOCTANK:
    Description: "IOCTANK Public Subnet B"
    Value: !Ref PublicSubnetBIOCTANK
    Export:
      Name: IOCTANK-PublicSubnetB
  
  PrivateSubnetAIOCTANK:
    Description: "IOCTANK Private Subnet A"
    Value: !Ref PrivateSubnetAIOCTANK
    Export:
      Name: IOCTANK-PrivateSubnetA
  PrivateSubnetBIOCTANK:
    Description: "IOCTANK Private Subnet B"
    Value: !Ref PrivateSubnetBIOCTANK
    Export:
      Name: IOCTANK-PrivateSubnetB 
  PrivateSubnetRouteTableIOCTANK:
    Description: "IOCTANK Private Route Table"
    Value: !Ref PrivateSubnetRouteTableIOCTANK
    Export:
      Name: IOCTANK-Private-Route-Table

  ServerAIOCTANK:
    Description: "IOCTANK EC2 A IP address"
    Value: !GetAtt ServerAEc2IOCTANK.PrivateIp
    Export:
      Name: IOCTANK-ServerAIP
  ServerBIOCTANK:
    Description: "IOCTANK EC2 B IP address"
    Value: !GetAtt ServerBEc2IOCTANK.PrivateIp
    Export:
      Name: IOCTANK-ServerBIP
