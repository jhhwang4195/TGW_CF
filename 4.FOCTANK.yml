AWSTemplateFormatVersion: "2010-09-09"
Description: "This is the data center automation configuration of the OCTANK virtual company. 2AZs, 10.101.0.0/8"

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "VPC Parameters"
        Parameters:
          - AvailabilityZoneA
          - AvailabilityZoneB

# AZ Parameters

Parameters:
  AvailabilityZoneA:
    Description: "Choose AZ1 for your VPC."
    Type: AWS::EC2::AvailabilityZone::Name
    Default: "ap-northeast-2"
  AvailabilityZoneB:
    Description: "Choose AZ2 for your VPC."
    Type: AWS::EC2::AvailabilityZone::Name
    Default: "ap-northeast-2"
  KeyPair:
    Description: "Keypair to access the EC2 Instance"
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "APR-2020-whchoi-home"
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

# whchoi ec2 images

#Mappings:
#  RegionMap:
#    'ap-northeast-2':
#      AMI: "ami-0e956abc893b8fdc2"
#    'ap-northeast-1':
#      AMI: "ami-0f21259d1600d67c7"
#    'us-east-1':
#      AMI: "ami-09bf161a067c3055c"
#    'eu-central-1':
#      AMI: "ami-00e257fbc328baa25"
#    'eu-west-1':
#      AMI: "ami-07eaa7bc8ad97f43c"

# whchoi02 account img
#Mappings:
#  RegionMap:
#    'ap-northeast-2':
#      AMI: "ami-07eb3b622d65b3282"
#    'ap-northeast-1':
#      AMI: "ami-0d0b31f9a31b06baf"
#    'us-east-1':
#      AMI: "ami-0175605caef730e00"
#    'eu-central-1':
#      AMI: "ami-049bfdd9d1aab5776"
#    'eu-west-1':
#      AMI: "ami-07eaa7bc8ad97f43c"

# FOCTANK Resources

Resources:

# Create VPCFOCTANK

  VPCFOCTANK:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.101.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: FOCTANK
        - Key: project
          Value: OCTANK

# Create VPCFOCTANK-PublicSubnet A

  PublicSubnetAFOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCFOCTANK
      CidrBlock: "10.101.0.0/22"
      AvailabilityZone: !Ref AvailabilityZoneA
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: FOCTANK-Pub-A Subnet

# Create VPCFOCTANK-PublicSubnet B

  PublicSubnetBFOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCFOCTANK
      CidrBlock: "10.101.4.0/22"
      AvailabilityZone: !Ref AvailabilityZoneB
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: FOCTANK-Pub-B Subnet

# Create VPCFOCTANK-Public Route Table

  PublicSubnetRouteTableFOCTANK:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCFOCTANK
      Tags:
        - Key: Name
          Value: FOCTANK-Public RT

# Public A Subnet Accsociate VPCFOCTANK-Public Route Table

  PublicASubnetRouteTableAssociationFOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTableFOCTANK
      SubnetId: !Ref PublicSubnetAFOCTANK

# Public B Subnet Accsociate VPCFOCTANK-Public Route Table

  PublicBSubnetRouteTableAssociationFOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTableFOCTANK
      SubnetId: !Ref PublicSubnetBFOCTANK

# Create VPCFOCTANK-PrivateSubnet A

  PrivateSubnetAFOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCFOCTANK
      CidrBlock: "10.101.8.0/21"
      AvailabilityZone: !Ref AvailabilityZoneA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: FOCTANK-Priv-A Subnet

# Create VPCFOCTANK-PrivateSubnet B

  PrivateSubnetBFOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCFOCTANK
      CidrBlock: "10.101.16.0/21"
      AvailabilityZone: !Ref AvailabilityZoneB
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: FOCTANK-Priv-B Subnet

# Create VPCFOCTANK-Private Route Table

  PrivateSubnetRouteTableFOCTANK:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCFOCTANK
      Tags:
        - Key: Name
          Value: FOCTANK-Private RT

# Private A Subnet Accsociate VPC-FOCTANK-Private Route Table

  PrivateASubnetRouteTableAssociationFOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTableFOCTANK
      SubnetId: !Ref PrivateSubnetAFOCTANK

# Private B Subnet Accsociate VPCFOCTANK-Private Route Table

  PrivateBSubnetRouteTableAssociationFOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTableFOCTANK
      SubnetId: !Ref PrivateSubnetBFOCTANK

# VPC FOCTANK ServerRole

  ServerRoleFOCTANK:
    Type: AWS::IAM::Role
    Properties:
      RoleName: FOCTANK-SSMRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  InstanceProfileFOCTANK:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - !Ref ServerRoleFOCTANK

# VPCFOCTANK Security Group - ICMP , SSH Permit 

  FOCTANKEc2SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open-up ports for ICMP and SSH from 10.x.x.x
      GroupName: FOCTANK-SG
      VpcId: !Ref VPCFOCTANK
      SecurityGroupIngress:
        - IpProtocol: icmp
          CidrIp: 0.0.0.0/0
          FromPort: "-1"
          ToPort: "-1"
        - IpProtocol: tcp
          CidrIp: 10.4.0.0/16
          FromPort: "22"
          ToPort: "22"
      Tags:
        - Key: Name
          Value: FOCTANK-SG
          
  # Create FOCTANK IGW

  FOCTANKInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: FOCTANK-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCFOCTANK
      InternetGatewayId: !Ref FOCTANKInternetGateway

  FOCTANKDirectInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: FOCTANKInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref FOCTANKInternetGateway
      RouteTableId: !Ref PublicSubnetRouteTableFOCTANK

# Creat FOCTANK NAT GateWay

  FOCTANKNATEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  FOCTANKNATGateway:
    DependsOn: AttachGateway
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt:
          - FOCTANKNATEIP
          - AllocationId
      SubnetId: !Ref PublicSubnetAFOCTANK
      Tags:
        - Key: Name
          Value: FOCTANK-NATGW

  FOCTANKNATInternetRouteAttach:
    Type: AWS::EC2::Route
    DependsOn: FOCTANKInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref FOCTANKNATGateway
      RouteTableId: !Ref AttachSubnetRouteTableFOCTANK

  FOCTANKNATInternetRoutePrivate:
    Type: AWS::EC2::Route
    DependsOn: FOCTANKInternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref FOCTANKNATGateway
      RouteTableId: !Ref PrivateSubnetRouteTableFOCTANK

# VPCFOCTANK EC2 Create

  ServerAEc2FOCTANK:
    Type: AWS::EC2::Instance
    DependsOn: PrivateSubnetAFOCTANK
    Properties:
      SubnetId: !Ref PrivateSubnetAFOCTANK
#     ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      ImageId: !Ref LatestAmiId
      PrivateIpAddress: 10.101.14.100
      InstanceType: t3.small
      SecurityGroupIds: 
        - Ref: FOCTANKEc2SecGroup
      IamInstanceProfile: !Ref InstanceProfileFOCTANK
      Tags:
        - Key: Name
          Value: FOCTANK-Server-A
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/sh
            sudo yum -y update
            sudo yum -y install yum-utils 
            sudo yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            sudo yum -y install iotop iperf3 iptraf tcpdump git bash-completion 
            sudo yum -y install httpd php mysql php-mysql 
            sudo yum -y install python-pip
            sudo yum -y install nethogs iftop lnav nmon tmux wireshark
            sudo systemctl start httpd
            sudo systemctl enable httpd
            cd /var/www/html/
            sudo git clone https://github.com/whchoi98/ec2meta-webpage.git
            sudo systemctl restart httpd
            cd /home/ec2-user/
            sudo git clone https://github.com/whchoi98/TGW_CF.git
            cd /home/ec2-user/TGW_CF/
            sudo -s
            cat hostfile >> /etc/hosts
            chmode 755 ./pingshell.sh
            exit
            
  
  ServerBEc2FOCTANK:
    Type: AWS::EC2::Instance
    DependsOn: PrivateSubnetBFOCTANK
    Properties:
      SubnetId: !Ref PrivateSubnetBFOCTANK
#     ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      ImageId: !Ref LatestAmiId
      PrivateIpAddress: 10.101.22.100
      InstanceType: t3.small
      SecurityGroupIds: 
        - Ref: FOCTANKEc2SecGroup
      IamInstanceProfile: !Ref InstanceProfileFOCTANK
      Tags:
        - Key: Name
          Value: FOCTANK-Server-B
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/sh
            sudo yum -y update
            sudo yum -y install yum-utils 
            sudo yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            sudo yum -y install iotop iperf3 iptraf tcpdump git bash-completion 
            sudo yum -y install httpd php mysql php-mysql 
            sudo yum -y install python-pip
            sudo yum -y install nethogs iftop lnav nmon tmux wireshark
            sudo systemctl start httpd
            sudo systemctl enable httpd
            cd /var/www/html/
            sudo git clone https://github.com/whchoi98/ec2meta-webpage.git
            sudo systemctl restart httpd
            cd /home/ec2-user/
            sudo git clone https://github.com/whchoi98/TGW_CF.git
            cd /home/ec2-user/TGW_CF/
            sudo -s
            cat hostfile >> /etc/hosts
            chmode 755 ./pingshell.sh
            exit
    
  AttachSubnetAFOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCFOCTANK
      CidrBlock: "10.101.24.0/24"
      AvailabilityZone: !Ref AvailabilityZoneA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: FOCTANK-Attach-A Subnet

  AttachSubnetBFOCTANK:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCFOCTANK
      CidrBlock: "10.101.25.0/24"
      AvailabilityZone: !Ref AvailabilityZoneB
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: FOCTANK-Attach-B Subnet

  AttachSubnetRouteTableFOCTANK:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCFOCTANK
      Tags:
        - Key: Name
          Value: FOCTANK-Attach RT

  AttachASubnetRouteTableAssociationFOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AttachSubnetRouteTableFOCTANK
      SubnetId: !Ref AttachSubnetAFOCTANK

  AttachBSubnetRouteTableAssociationFOCTANK:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AttachSubnetRouteTableFOCTANK
      SubnetId: !Ref AttachSubnetBFOCTANK

  EndpointSecGroupFOCTANK:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open-up ports for local VPC
      GroupName: FOCTANK-EP-SG
      VpcId: !Ref VPCFOCTANK
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "1"
          ToPort: "65535"
          CidrIp: 10.101.0.0/16
        - IpProtocol: udp
          FromPort: "1"
          ToPort: "65535"
          CidrIp: 10.101.0.0/16
      Tags:
        - Key: Name
          Value: FOCTANK-EP-SG

  SSMEndpointFOCTANK:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPCFOCTANK
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssm"
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      SubnetIds:
        - Ref: AttachSubnetAFOCTANK
        - Ref: AttachSubnetBFOCTANK
      SecurityGroupIds: 
        - Ref: EndpointSecGroupFOCTANK

  SSMMEndpointFOCTANK:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPCFOCTANK
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssmmessages"
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      SubnetIds:
        - Ref: AttachSubnetAFOCTANK
        - Ref: AttachSubnetBFOCTANK
      SecurityGroupIds: 
        - Ref: EndpointSecGroupFOCTANK

  # Create OCTANK Transit Gateway
  TransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      AmazonSideAsn: 65000
      Description: "TGW Route Integration Test"
      AutoAcceptSharedAttachments: "enable"
      DefaultRouteTableAssociation: "disable"
      DnsSupport: "enable"
      VpnEcmpSupport: "enable"
      Tags:
        - Key: Name
          Value: FOCTANK-TGW

Outputs:
  # FOCTANK Outputs
  VPCFOCTANK:
    Description: "The Created VPC"
    Value: !Ref VPCFOCTANK
    Export:
      Name: FOCTANK-VPC

  AttachSubnetAFOCTANK:
    Description: "FOCTANK Attach Subnet A"
    Value: !Ref AttachSubnetAFOCTANK
    Export:
      Name: FOCTANK-AttachSubnetA
  AttachSubnetBFOCTANK:
    Description: "FOCTANK Attach Subnet B"
    Value: !Ref AttachSubnetBFOCTANK
    Export:
      Name: FOCTANK-AttachSubnetB


  PublicSubnetAFOCTANK:
    Description: "FOCTANK Public Subnet A"
    Value: !Ref PublicSubnetAFOCTANK
    Export:
      Name: FOCTANK-PublicSubnetA
  PublicSubnetBFOCTANK:
    Description: "FOCTANK Public Subnet B"
    Value: !Ref PublicSubnetBFOCTANK
    Export:
      Name: FOCTANK-PublicSubnetB
  
  PrivateSubnetAFOCTANK:
    Description: "FOCTANK Private Subnet A"
    Value: !Ref PrivateSubnetAFOCTANK
    Export:
      Name: FOCTANK-PrivateSubnetA
  PrivateSubnetBFOCTANK:
    Description: "FOCTANK Private Subnet B"
    Value: !Ref PrivateSubnetBFOCTANK
    Export:
      Name: FOCTANK-PrivateSubnetB 
  PrivateSubnetRouteTableFOCTANK:
    Description: "FOCTANK Private Route Table"
    Value: !Ref PrivateSubnetRouteTableFOCTANK
    Export:
      Name: FOCTANK-Private-Route-Table

  ServerAFOCTANK:
    Description: "FOCTANK EC2 A IP address"
    Value: !GetAtt ServerAEc2FOCTANK.PrivateIp
    Export:
      Name: FOCTANK-ServerAIP
  ServerBFOCTANK:
    Description: "FOCTANK EC2 B IP address"
    Value: !GetAtt ServerBEc2FOCTANK.PrivateIp
    Export:
      Name: FOCTANK-ServerBIP
